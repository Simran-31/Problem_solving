class Solution {
public:
    int getdist(vector<int>&point){
        int x=point[0],y=point[1];
        return(x*x+y*y);
    }
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        priority_queue<pair<int,int>>pq;
        int n=points.size();
        for(int i=0;i<n;i++)
        {
            int disstofpoint=getdist(points[i]);
            if((int)pq.size()+1<=k){
                pq.push({disstofpoint,i});
            }
            else if(disstofpoint<pq.top().first){
                pq.pop();
                pq.push({disstofpoint,i});
            }
        }
        vector<vector<int>>ans;
        while(!pq.empty()){
            int idx=pq.top().second;
            ans.push_back(points[idx]);
            pq.pop();
            
        }
        return ans;
    }
};
